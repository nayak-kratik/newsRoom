{"version":3,"sources":["components/sideNav.jsx","utils/colorPalette.js","views/dashboradComponents/breakingNews.jsx","views/dashboradComponents/otherNews.jsx","views/dashboard.jsx","views/article.jsx","actions/actionCreators.js","helpers/urlFormatter.js","actions/actions.js","services/newsServices.js","App.js","serviceWorker.js","reducers/newsReducer.js","reducers/breakingNewsReducer.js","store/index.js","index.js"],"names":["Sider","Layout","SideNav","props","shouldCollapse","flag","setState","collapsed","state","loadArticlesFromSource","this","trigger","collapsible","breakpoint","onBreakpoint","broken","justify","className","span","onClick","e","Component","Paragraph","Typography","Title","BreakingNewsComponent","breakingNews","orientation","title","autoplay","effect","map","item","key","src","urlToImage","alt","align","xs","sm","md","lg","xl","source","name","to","pathname","sources","publishedAt","description","url","content","ExpandAltOutlined","level","Meta","Card","OtherNewsComponent","articles","cover","height","actions","LikeOutlined","Dashboard","length","loadMore","connect","Article","location","Date","toDateString","extra","window","open","onBack","history","back","receiveNews","type","recieveBreakingNews","formatUrl","formattedUrl","d","push","encodeURIComponent","join","fetchNews","provider","pageNumber","dispatch","Promise","resolve","reject","formattedParams","sortBy","apiKey","pageSize","page","fetch","baseUrl","method","headers","then","response","json","catch","err","requestNewsService","fetchBreakingNews","Content","Main","changeBgColor","color","bgColor","pageBg","getNews","getBreakingNews","prevState","isLoadMore","scrollTo","prevProps","get","document","getElementsByClassName","concat","style","backgroundColor","cursor","exact","path","render","component","newsSource","Boolean","hostname","match","defaultState","Map","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","reducer","combineReducers","action","set","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","App","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.23626f49.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col } from \"antd\";\nimport { Layout } from \"antd\";\n\nimport { COLOR1, COLOR2, COLOR3, COLOR4, COLOR5 } from \"../utils/colorPalette\";\n\nimport \"../styles/styles.scss\";\nconst { Sider } = Layout;\n\nclass SideNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: false,\n    };\n  }\n\n  shouldCollapse = (flag) => {\n    //  Collapse and expand side nav\n    this.setState({\n      collapsed: flag,\n    });\n  };\n  render() {\n    const { loadArticlesFromSource } = this.props;\n    return (\n      <>\n        <Sider\n          trigger={null}\n          collapsible\n          collapsed={this.state.collapsed}\n          breakpoint=\"md\"\n          onBreakpoint={(broken) => {\n            broken ? this.shouldCollapse(true) : this.shouldCollapse(false);\n          }}\n        >\n          <Row justify=\"space-around\" className=\"h-100\">\n            <Col\n              className=\"css-source  color-one\"\n              span={24}\n              onClick={(e) => loadArticlesFromSource(COLOR1, \"bbc-news\")}\n            >\n              BBC\n            </Col>\n\n            <Col\n              className=\"css-source color-two\"\n              span={24}\n              onClick={(e) => loadArticlesFromSource(COLOR2, \"cnn\")}\n            >\n              CNN\n            </Col>\n            <Col\n              className=\"css-source color-three\"\n              span={24}\n              onClick={(e) => loadArticlesFromSource(COLOR3, \"espn\")}\n            >\n              ESPN\n            </Col>\n            <Col\n              className=\"css-source color-four\"\n              span={24}\n              onClick={(e) => loadArticlesFromSource(COLOR4, \"abc-news\")}\n            >\n              ABC News\n            </Col>\n            <Col\n              className=\"css-source color-five\"\n              span={24}\n              onClick={(e) => loadArticlesFromSource(COLOR5, \"the-hindu\")}\n            >\n              The Hindu\n            </Col>\n          </Row>\n        </Sider>\n      </>\n    );\n  }\n}\nexport default SideNav;\n","export const COLOR1 = \"#f7f7f7\";\nexport const COLOR2 = \"#efefef\";\nexport const COLOR3 = \"#e4e4e4\";\nexport const COLOR4 = \"#d8d6d6\";\nexport const COLOR5 = \"#cac8c8\";\n","import React from \"react\";\n\nimport { Carousel, Row, Col, PageHeader, Divider, Typography } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { ExpandAltOutlined } from \"@ant-design/icons\";\nconst { Paragraph, Title } = Typography;\n\nconst BreakingNewsComponent = ({ breakingNews }) => {\n  return (\n    <>\n      <Divider orientation=\"left\">\n        <PageHeader className=\"site-page-header\" title=\"BREAKING NEWS\" />\n      </Divider>\n      <Carousel autoplay=\"true\" effect=\"fade\">\n        {breakingNews.map((item, key) => (\n          <div key={key} className=\"article__carousel-card\">\n            <img\n              src={item.urlToImage}\n              alt=\"img\"\n              className=\"m-auto w-100 article_img\"\n            ></img>\n            <div className=\"m-auto w-100 position-absolute article__title\">\n              <Row align=\"middle\">\n                <Col xs={18} sm={18} md={18} lg={23} xl={23}>\n                  <span className=\"text-color-white\">\n                    {item.source && item.source.name}\n                  </span>\n                  <h3 className=\"text-color-white m-0 p-0\">{item.title}</h3>\n                </Col>\n                <Col xs={6} sm={6} md={6} lg={1} xl={1}>\n                  <Link\n                    className=\"p-2 color-one\"\n                    to={{\n                      pathname: \"/article\",\n                      state: {\n                        sources: item.source && item.source.name,\n                        publishedAt: item.publishedAt,\n                        title: item.title,\n                        description: item.description,\n                        url: item.url,\n                        urlToImage: item.urlToImage,\n                        content: item.content,\n                      },\n                    }}\n                  >\n                    <ExpandAltOutlined />\n                  </Link>\n                </Col>\n              </Row>\n            </div>\n            <div className=\"article__content\">\n              {item.content ? (\n                <>\n                  <Row>\n                    <Col>\n                      <Typography>\n                        <Title level={4} className=\"article_description\">\n                          {item.description}\n                        </Title>\n                        <Paragraph>{item.content}</Paragraph>\n                      </Typography>\n                    </Col>\n                  </Row>\n                </>\n              ) : (\n                <Row>\n                  <Col span={24}>Content Unavailable</Col>\n                </Row>\n              )}\n            </div>\n          </div>\n        ))}\n      </Carousel>\n    </>\n  );\n};\n\nexport default BreakingNewsComponent;\n","import React from \"react\";\n\nimport { Card, Row, Col, PageHeader, Divider } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { LikeOutlined } from \"@ant-design/icons\";\nconst { Meta } = Card;\n\nconst OtherNewsComponent = ({ articles }) => {\n  return (\n    <>\n      <Divider orientation=\"left\">\n        <PageHeader className=\"site-page-header\" title=\"AROUND THE GLOBE\" />\n      </Divider>\n      <Row>\n        {articles.map(\n          (item, key) =>\n            item.content && (\n              <Col key={key} xs={24} sm={24} md={12} lg={8} xl={8}>\n                <Card\n                  className=\"article__card  mx-2 my-2\"\n                  cover={<img alt=\"img\" src={item.urlToImage} height=\"225\" />}\n                  actions={[\n                    <LikeOutlined key=\"like\" />,\n                    // Redirect the user to /article page and pass values\n                    <Link\n                      to={{\n                        pathname: \"/article\",\n                        state: {\n                          sources: item.source && item.source.name,\n                          publishedAt: item.publishedAt,\n                          title: item.title,\n                          description: item.description,\n                          url: item.url,\n                          urlToImage: item.urlToImage,\n                          content: item.content,\n                        },\n                      }}\n                    >\n                      View Full Article\n                    </Link>,\n                  ]}\n                >\n                  <Meta title={item.title} description={item.content} />\n                </Card>\n              </Col>\n            )\n        )}\n      </Row>\n    </>\n  );\n};\n\nexport default OtherNewsComponent;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../styles/styles.scss\";\nimport BreakingNewsComponent from \"./dashboradComponents/breakingNews\";\nimport OtherNewsComponent from \"./dashboradComponents/otherNews\";\n\nclass Dashboard extends Component {\n  render() {\n    return this.props.breakingNews &&\n      this.props.breakingNews.length > 0 &&\n      this.props.articles &&\n      this.props.articles.length > 0 ? (\n      <>\n        <div>\n          <BreakingNewsComponent\n            breakingNews={this.props.breakingNews}\n          ></BreakingNewsComponent>\n        </div>\n        <div className=\" mt-3\">\n          <OtherNewsComponent\n            articles={this.props.articles}\n          ></OtherNewsComponent>\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <button className=\"my-2 w-50\" onClick={() => this.props.loadMore()}>\n            Load More Articles\n          </button>\n        </div>\n      </>\n    ) : (\n      <div className=\"d-flex h-100 justify-content-center align-items-center \">\n        <h3> Loading</h3>\n      </div>\n    );\n  }\n}\n\nexport default connect(null)(Dashboard);\n","import React from \"react\";\nimport { PageHeader, Button, Row, Col, Typography } from \"antd\";\nconst { Paragraph } = Typography;\n\nconst Article = (props) => {\n  const content = (\n    <div className=\"text-center individual-article\">\n      <img\n        src={props.location.state.urlToImage}\n        alt=\"img\"\n        className=\"w-100 article_img\"\n      ></img>\n      <Row>\n        <Col xs={12} sm={12} md={12} lg={12} xl={12} className=\"text-left\">\n          Source - {props.location.state.sources}\n        </Col>\n        <Col xs={12} sm={12} md={12} lg={12} xl={12} className=\"text-right\">\n          {new Date(props.location.state.publishedAt).toDateString()}\n        </Col>\n      </Row>\n      <Paragraph className=\"font-weight-bold  bg-transparent\">\n        {props.location.state.description}\n      </Paragraph>\n      <Paragraph className=\"font-weight-bold bg-transparent\">\n        {props.location.state.content}\n      </Paragraph>\n    </div>\n  );\n  return (\n    <>\n      <PageHeader\n        title={props.location.state.title}\n        className=\"individual-article-site-page-header my-3\"\n        extra={[\n          <Button\n            key=\"3\"\n            onClick={() => {\n              window.open(props.location.state.url, \"_blank\");\n            }}\n          >\n            View Full Article\n          </Button>,\n        ]}\n        onBack={() => window.history.back()}\n      >\n        {content}\n      </PageHeader>\n    </>\n  );\n};\nexport default Article;\n","export function requestNews() {\n  return {\n    type: \"REQUEST_NEWS\",\n  };\n}\n\nexport function receiveNews(articles) {\n  return {\n    type: \"RECIEVE_NEWS\",\n    articles: articles,\n  };\n}\n\nexport function requestBreakingNews() {\n  return {\n    type: \"REQUEST_BREAKING_NEWS\",\n  };\n}\n\nexport function recieveBreakingNews(breakingNews) {\n  return {\n    type: \"RECIEVE_BREAKING_NEWS\",\n    breakingNews: breakingNews,\n  };\n}\n","export function formatUrl(source) {\n  const formattedUrl = [];\n  for (let d in source)\n    formattedUrl.push(\n      encodeURIComponent(d) + \"=\" + encodeURIComponent(source[d])\n    );\n  return formattedUrl.join(\"&\");\n}\n","import {\n  requestNews,\n  receiveNews,\n  requestBreakingNews,\n  recieveBreakingNews,\n} from \"./actionCreators\";\nimport {\n  requestNewsService,\n  requestBreakingNewsService,\n} from \"../services/newsServices\";\n\nexport function fetchNews(provider, pageNumber) {\n  return (dispatch) => {\n    // requestNews action creator is used to change status to loading/fetching\n    dispatch(requestNews());\n    requestNewsService(provider, pageNumber)\n      .then((response) => {\n        dispatch(receiveNews(response.articles));\n      })\n      .catch(() => {\n        dispatch(receiveNews([]));\n      });\n  };\n}\n\nexport function fetchBreakingNews(provider) {\n  return (dispatch) => {\n    dispatch(requestBreakingNews());\n    requestBreakingNewsService(provider)\n      .then((response) => {\n        dispatch(recieveBreakingNews(response.articles));\n      })\n      .catch(() => {\n        dispatch(recieveBreakingNews([]));\n      });\n  };\n}\n","import { formatUrl } from \"../helpers/urlFormatter\";\n\n// This proxy  server is used to avoid CORS error\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\nexport function requestNewsService(source, pageNumber) {\n  return new Promise((resolve, reject) => {\n    const baseUrl = \"http://newsapi.org/v2/everything\";\n    const formattedParams = formatUrl({\n      sources: source,\n      sortBy: \"publishedAt\",\n      apiKey: \"13f7003e27004379881e669afe8e2814\",\n      pageSize: 10,\n      page: pageNumber,\n    });\n    fetch(baseUrl + \"?\" + formattedParams, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\":\n          \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\n        \"Access-Control-Allow-Headers\":\n          \"X-Requested-With, content-type, Authorization\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        resolve(json);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n}\n\nexport function requestBreakingNewsService(source) {\n  return new Promise((resolve, reject) => {\n    const baseUrl = \"http://newsapi.org/v2/top-headlines\";\n    const formattedParams = formatUrl({\n      sources: source,\n      sortBy: \"publishedAt\",\n      apiKey: \"13f7003e27004379881e669afe8e2814\",\n    });\n    fetch(baseUrl + \"?\" + formattedParams, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\":\n          \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\n        \"Access-Control-Allow-Headers\":\n          \"X-Requested-With, content-type, Authorization\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        resolve(json);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n}\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport SideNav from \"./components/sideNav\";\nimport Dashboard from \"./views/dashboard.jsx\";\nimport Article from \"./views/article.jsx\";\nimport { fetchNews, fetchBreakingNews } from \"./actions/actions\";\nimport { connect } from \"react-redux\";\nimport { Layout } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./styles/styles.scss\";\nimport { COLOR1 } from \"./utils/colorPalette\";\n\nconst { Content } = Layout;\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bgColor: COLOR1,\n      articles: [],\n      breakingNews: [],\n      pageNumber: 1,\n      source: \"bbc-news\",\n      isLoadMore: false,\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    // Trigger action to Make API Calls\n    this.props.getNews(this.state.source);\n    this.props.getBreakingNews(this.state.source);\n  }\n\n  componentDidUpdate(prevProps) {\n    // This sets the prop value (News and headlines) to state\n\n    if (\n      prevProps.articles !== this.props.articles &&\n      this.props.articles.get(\"status\") !== \"fetching\"\n    ) {\n      // Scroll to top only if load more is not clicked\n      !this.state.isLoadMore &&\n        document.getElementsByClassName(\"main-layout\")[0].scrollTo(0, 0);\n\n      // Update state with the latest news which is sent via props\n      // If the action is load more, then append the articles to existing articles.\n      // Else, show new articles from different source\n      this.setState(() => ({\n        articles: this.state.isLoadMore\n          ? this.state.articles.concat(this.props.articles.get(\"articles\"))\n          : this.props.articles.get(\"articles\"),\n        isLoadMore: false,\n      }));\n    }\n\n    if (\n      prevProps.breakingNews !== this.props.breakingNews &&\n      this.props.breakingNews.get(\"status\") !== \"fetching\"\n    ) {\n      this.setState(() => ({\n        breakingNews: this.props.breakingNews.get(\"breakingNews\"),\n      }));\n    }\n  }\n\n  changeBgColor = (color) => {\n    // Used to change bg color of the page\n    this.setState({ bgColor: color });\n  };\n\n  loadArticlesFromSource = (pageBg, source) => {\n    // This function is called on navigating to another source\n    this.changeBgColor(pageBg);\n    this.setState(() => ({\n      source,\n      pageNumber: 1,\n    }));\n    this.props.getNews(source);\n    this.props.getBreakingNews(source);\n  };\n\n  loadMore = () => {\n    // This function is called on clickng 'load more'\n    this.props.getNews(this.state.source, this.state.pageNumber + 1);\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        pageNumber: prevState.pageNumber + 1,\n        isLoadMore: true,\n      };\n    });\n  };\n  render() {\n    return (\n      <>\n        <Layout\n          className=\"h-100\"\n          style={{\n            backgroundColor: this.state.bgColor,\n            cursor:\n              this.props.articles.get(\"status\") === \"fetching\"\n                ? \"wait\"\n                : \"unset\",\n            // pointerEvents:\n            //   this.props.articles.get(\"status\") === \"fetching\" ? \"none\" : \"all\",\n          }}\n        >\n          <SideNav\n            loadArticlesFromSource={this.loadArticlesFromSource}\n          ></SideNav>\n          <Layout className=\"bg-transparent main-layout\">\n            <Content>\n              <Route\n                exact\n                path=\"/\"\n                render={(props) => (\n                  <Dashboard\n                    {...props}\n                    articles={this.state.articles}\n                    breakingNews={this.state.breakingNews}\n                    loadMore={this.loadMore}\n                  />\n                )}\n              />\n              <Route path=\"/article\" component={Article} />\n            </Content>\n          </Layout>\n        </Layout>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    articles: state.articles,\n    breakingNews: state.breakingNews,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getNews: (newsSource, pageNumber = 1) => {\n      dispatch(fetchNews(newsSource, pageNumber));\n    },\n    getBreakingNews: (newsSource) => {\n      dispatch(fetchBreakingNews(newsSource));\n    },\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Map } from \"immutable\";\nlet defaultState = Map({\n  articles: [],\n});\nexport const newsReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case \"REQUEST_NEWS\":\n      return state.set(\"status\", \"fetching\");\n    case \"RECIEVE_NEWS\":\n      return state.set(\"status\", \"quiet\").set(\"articles\", action.articles);\n    default:\n      return state;\n  }\n};\n","import { Map } from \"immutable\";\nlet defaultState = Map({\n  breakingNews: [],\n});\nexport const breakingNewReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case \"REQUEST_BREAKING_NEWS\":\n      return state.set(\"status\", \"fetching\");\n    case \"RECIEVE_BREAKING_NEWS\":\n      return state\n        .set(\"status\", \"quiet\")\n        .set(\"breakingNews\", action.breakingNews);\n    default:\n      return state;\n  }\n};\n","import { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\n\nimport { newsReducer } from \"../reducers/newsReducer\";\nimport { breakingNewReducer } from \"../reducers/breakingNewsReducer\";\nimport thunkMiddleware from \"redux-thunk\";\nconst composeEnhancer =\n  (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      trace: true,\n      traceLimit: 25,\n    })) ||\n  compose;\n\nconst reducer = combineReducers({\n  articles: newsReducer,\n  breakingNews: breakingNewReducer,\n});\n\nconst store = createStore(\n  reducer,\n  composeEnhancer(applyMiddleware(thunkMiddleware))\n);\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route path=\"/\" component={App} />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}